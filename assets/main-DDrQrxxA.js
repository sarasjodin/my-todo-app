var f=Object.defineProperty;var g=(r,o,e)=>o in r?f(r,o,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[o]=e;var u=(r,o,e)=>g(r,typeof o!="symbol"?o+"":o,e);(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))n(t);new MutationObserver(t=>{for(const s of t)if(s.type==="childList")for(const d of s.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&n(d)}).observe(document,{childList:!0,subtree:!0});function e(t){const s={};return t.integrity&&(s.integrity=t.integrity),t.referrerPolicy&&(s.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?s.credentials="include":t.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(t){if(t.ep)return;t.ep=!0;const s=e(t);fetch(t.href,s)}})();class h{constructor(){u(this,"todos",[]);this.loadFromLocalStorage()}addTodo(o,e){const n=o.trim();return!n||e<1||e>3?"invalid":this.todos.some(s=>s.task.toLowerCase()===n.toLowerCase())?"duplicate":(this.todos.push({task:n,priority:e,completed:!1,createdAt:Date.now()}),this.saveToLocalStorage(),"ok")}deleteTodo(o){const e=this.todos.findIndex(n=>n.createdAt===o);e!==-1&&(this.todos.splice(e,1),this.saveToLocalStorage())}toggleTodoCompleted(o){const e=this.todos.find(n=>n.createdAt===o);if(e)return e.completed=!e.completed,e.completedAt=e.completed?Date.now():void 0,this.saveToLocalStorage(),e.completed}getTodos(){return this.todos}saveToLocalStorage(){localStorage.setItem("todos",JSON.stringify(this.todos))}loadFromLocalStorage(){const o=localStorage.getItem("todos");o&&(this.todos=JSON.parse(o))}}function c(r,o){const e=document.getElementById("errorMsg"),n=document.getElementById("successMsg");e.textContent="",n.textContent="",r==="error"?e.textContent=o:n.textContent=o,setTimeout(()=>{e.textContent="",n.textContent=""},4e3)}function y(r){r===!0?c("success","Well done, item marked as done!"):r===!1?c("success","Todo item unmarked"):c("error","Could not toggle todo")}function i(r){const o=document.querySelector("#todo-container");o.innerHTML="";const e=r.getTodos();if(e.length===0){c("error","No items found yet");return}e.slice().sort((t,s)=>t.completed!==s.completed?t.completed?1:-1:t.priority!==s.priority?t.priority-s.priority:t.createdAt-s.createdAt).forEach(t=>{const s=document.createElement("div");s.className="todo-item",s.dataset.createdat=t.createdAt.toString(),s.innerHTML=`
      <input type="checkbox" class="toggle-completed" ${t.completed?"checked":""}>
    <span class="task-text">${t.task}</span>
    <span class="dots"></span>
    <span class="priority">| Prio ${t.priority}</span>
    <button class="delete-todo">X</button>
  `,o.appendChild(s)})}function T(r){var t;const o=document.getElementById("todoForm"),e=document.getElementById("taskInput"),n=document.getElementById("priorityInput");o.addEventListener("submit",s=>{s.preventDefault();const d=r.addTodo(e.value,+n.value);d==="duplicate"?c("error","Todo item already exists"):d==="invalid"?c("error","Add a valid task and priority"):(c("success","Todo item has been added"),e.value="",n.value="2",i(r))}),(t=document.querySelector("#todo-container"))==null||t.addEventListener("click",s=>{const d=s.target,a=d.closest(".todo-item");if(!a)return;const l=parseInt(a.dataset.createdat);if(d.classList.contains("delete-todo")&&(c("success","Todo item has been deleted"),r.deleteTodo(l),i(r)),d.classList.contains("toggle-completed")){const p=r.toggleTodoCompleted(l);y(p),i(r)}})}const m=new h;i(m);T(m);
